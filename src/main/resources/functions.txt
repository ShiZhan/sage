Stand Along Graph Engine
Usage: sage [-hipmg] <options> [input file]

 -h   Print this message

 -i   [input file],     import edge list file for processing.
                        in text mode, input as 2 columns CSV, comments start
                        with '#', omit for console input.
      --binary,         input as binary edge list.
      --self-loop,      allow self loop edges.
      --bidirectional,  generate reverse edges simultaneously.

 -p   [algorithm],      run designated algorithm on imported graph.
      [input file],     imported edge list file.

      algorithms                   options                example
      ----------                   -------                -------
      Breadth-First Search         bfs[:u]:root(Long)     bfs:u:0
      Single Source Shortest Path  sssp:root(Long)        sssp:0
      Connected Component          cc                     cc
      Community Detection          community              community
      Clustering Coefficient       cluster                cluster
      Counting Triangle            triangle               triangle
      Degree distribution          degree[:u]             degree
      K-Core distribution          kcore                  kcore

      * u: use edge list as undirected.

 -m   [vertex map],     remap vertex ID in edge list by given map.
                        map is stored as sequence[Long]:

                        Original ID  -->  New ID
                        -----------       ------
                        value[Long]       line number[Long]
                        "-1"              bypass this line (unused new ID)

                        use "squeeze" as vertex map will generate consecutive
                        IDs for edge list, and corresponding "squeeze.map".

      [input file],     input edge list file, omit for console input (CSV).
      --out [file],     output edge list to file, omit for console output.
      --binary,         input and output as binary edge list.

 -g   [generator],      generate synthetic graph.

      generators        options                                   example
      ----------        -------                                   -------
      Recursive MATrix  rmat:scale:degree(Int)                    rmat:8:8
      Erdos Renyi       er:scale(Int):ratio(Double)               er:8:0.1
      ER Simplified     ers:scale(Int):degree(Int)                er:8:8
      Small World       sw:scale:neighbour(Int):rewiring(Double)  sw:8:3:0.1
      Barabasi Albert   ba:scale:m0(Int)                          ba:8:3
      BA Simplified     bas:scale:m0(Int)                         bas:8:3
      Grid2             grid:row-scale:col-scale(Int)             grid:3:3
      Grid3             grid:x-scale:y-scale:z-scale(Int)         grid:3:3:3

      --out [file],     output edge list to file, omit for console output.
      --binary,         output as binary edge list.

Shi Zhan
http://shizhan.github.io/
